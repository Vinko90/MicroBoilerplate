-- ************************** SqlDBM: PostgreSQL **************************
-- * Generated by SqlDBM: Authentication Demo



-- ************************************** Users

CREATE TABLE IF NOT EXISTS Users
(
    "Id"           serial NOT NULL,
    Username     text NOT NULL,
    Password     text NOT NULL,
    DisplayName  text NULL,
    IsActive     boolean NOT NULL,
    SerialNumber text NULL,
    LastLoggedIn timestamp with time zone NULL,
    CONSTRAINT User_PK PRIMARY KEY ( "Id" )
    );

-- ************************************** Roles

CREATE TABLE IF NOT EXISTS Roles
(
    "Id"       serial NOT NULL,
    RoleName text NOT NULL,
    CONSTRAINT RoleId_PK PRIMARY KEY ( "Id" )
    );

-- ************************************** UserTokens

CREATE TABLE IF NOT EXISTS UserTokens
(
    "Id"                          serial NOT NULL,
    AccessTokenHash             text NULL,
    UserId                      int NOT NULL,
    AccessTokenExpiresDateTime  timestamp with time zone NOT NULL,
    RefreshTokenIdHash          text NOT NULL,
    RefreshTokenIdHashSource    text NULL,
    RefreshTokenExpiresDateTime timestamp with time zone NOT NULL,
    CONSTRAINT UserTokens_PK PRIMARY KEY ( "Id" ),
    CONSTRAINT UsersTokens_Users_FK FOREIGN KEY ( UserId ) REFERENCES Users ( "Id" )
    );

CREATE INDEX UserTokens_UserId_FK ON UserTokens
    (
     UserId
        );

-- ************************************** UserRoles

CREATE TABLE IF NOT EXISTS UserRoles
(
    UserId int NOT NULL,
    RoleId int NOT NULL,
    CONSTRAINT UserRoles_PK PRIMARY KEY ( UserId, RoleId ),
    CONSTRAINT UserRoles_Roles_FK FOREIGN KEY ( RoleId ) REFERENCES Roles ( "Id" ),
    CONSTRAINT UserRoles_Users_FK FOREIGN KEY ( UserId ) REFERENCES Users ( "Id" )
    );

CREATE INDEX UserRoles_RoleId_FK ON UserRoles
    (
     RoleId
        );

CREATE INDEX UserRoles_UserId_FK ON UserRoles
    (
     UserId
        );

